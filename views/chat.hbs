<!DOCTYPE>
<html>
<head>
    <title>{{title}}</title>
    <style>
        form { position: fixed; bottom: 0; }
        #messages { list-style-type: none; margin: 0; padding: 0; }
        #messages li { padding: 2px; }
    </style>
    <script>
        (function(i,s,o,g,r,a,m){i['GoogleAnalyticsObject']=r;i[r]=i[r]||function(){
                    (i[r].q=i[r].q||[]).push(arguments)},i[r].l=1*new Date();a=s.createElement(o),
                m=s.getElementsByTagName(o)[0];a.async=1;a.src=g;m.parentNode.insertBefore(a,m)
        })(window,document,'script','https://www.google-analytics.com/analytics.js','ga');

        ga('create', 'UA-102443698-2', 'auto');
        ga('send', 'pageview');

    </script>
    <script src="/socket.io/socket.io.js"></script>

<link rel="stylesheet" href="https://maxcdn.bootstrapcdn.com/bootstrap/3.3.7/css/bootstrap.min.css" integrity="sha384-BVYiiSIFeK1dGmJRAkycuHAHRg32OmUcww7on3RYdg4Va+PmSTsz/K68vbdEjh4u" crossorigin="anonymous">

    <script
            src="https://code.jquery.com/jquery-3.2.1.min.js"
            integrity="sha256-hwg4gsxgFZhOsEEamdOYGBf13FyQuiTwlAQgxVSNgt4="
            crossorigin="anonymous"></script>

<script src="https://maxcdn.bootstrapcdn.com/bootstrap/3.3.7/js/bootstrap.min.js" integrity="sha384-Tc5IQib027qvyjSMfHjOMaLkfuWVxZxUPnCJA7l2mCWNIpG9mGCD8wGNIcPD7Txa" crossorigin="anonymous"></script>

    <script>

    function xhrRequest(method,verb,dataIn,successCallback,errorCallback,contentType){
    $.ajax({
            url: method,
            type: verb,
            data: dataIn || "",
            contentType: contentType || 'application/x-www-form-urlencoded; charset=UTF-8',
            //beforeSend: Zeus.Shared.Loader.ShowLoader(),
            success: function (json) {
                if (typeof (successCallback) != 'undefined') {
                    successCallback(json);
                }
            },
            error: function(error) {
                errorCallback(error);
            }
        });
    }

    function getLocalIPs(callback) {
            var ips = [];

            var RTCPeerConnection = window.RTCPeerConnection ||
                window.webkitRTCPeerConnection || window.mozRTCPeerConnection;

            var pc = new RTCPeerConnection({
                // Don't specify any stun/turn servers, otherwise you will
                // also find your public IP addresses.
                iceServers: []
            });
            // Add a media line, this is needed to activate candidate gathering.
            pc.createDataChannel('');

            // onicecandidate is triggered whenever a candidate has been found.
            pc.onicecandidate = function(e) {
                if (!e.candidate) { // Candidate gathering completed.
                    pc.close();
                    callback(ips);
                    return;
                }
                var ip = /^candidate:.+ (\S+) \d+ typ/.exec(e.candidate.candidate)[1];
                if (ips.indexOf(ip) == -1) // avoid duplicate entries (tcp/udp)
                    ips.push(ip);
            };
            pc.createOffer(function(sdp) {
                pc.setLocalDescription(sdp);
            }, function onerror() {});
        }

    Notification.requestPermission(function(status) {
    console.log('Notification permission status:', status);
    });

    function displayNotification(msg) {
        if (Notification.permission == 'granted') {
    navigator.serviceWorker.getRegistration().then(function(reg) {
      reg.showNotification(msg);
    });
  }
}

    var cnt=0;
    var userName=localStorage.getItem("username");

    function changeUserName(){
        var newUserName;
        do{
            newUserName=prompt("Please enter your new username");
        }while(newUserName == null || newUserName == "" );

        getLocalIPs(function(ips) { // <!-- ips is an array of local IP addresses.
                var userNameModel={
                    "ip":ips.join("\n"),
                    "newUserName":newUserName,
                    "userName":localStorage.getItem("username")
                };

                xhrRequest("/username","PUT",JSON.stringify(userNameModel),function(data){
                    localStorage.setItem("username",newUserName);
                },function(err){
                    if(err.status==409){
                       alert("User name already exist.")
                        setTimeout(location.reload(true),2000);
                    }else{
                        alert("Internal server error");
                    }
                },"application/json; charset=utf-8");

            });        
    }

        if(userName==null || userName.length===0){

            do{
                userName=prompt("Please enter your username");
            }while(userName == null || userName == "" );

            getLocalIPs(function(ips) { // <!-- ips is an array of local IP addresses.
                var userNameModel={
                    "ip":ips.join("\n"),
                    "userName":userName
                };
                xhrRequest("/username","POST",JSON.stringify(userNameModel),function(data){
                    localStorage.setItem("username",userName);
                },function(err){
                if(err.status==409){
                    alert("User name already exist.")
                    setTimeout(location.reload(true),2000);
                }else{
                    alert("Internal server error");
                }
                },"application/json; charset=utf-8");

            });
        }

        setTimeout(function(){
        $("#m").focus();
        },1000);

        $(()=>{
            var socket = io();
            var testThread="grp_48ff29fca57";
            var message=(msg,tok,thr)=>{
              return{
                  message:msg,
                  token:tok,
                  thread:thr,
                  success:true
              }
            };
            $("#chatForm").submit(()=>{

               if($("#m").val().length===0){
                return false;
               }

               socket.emit('main_thread',message($("#m").val(),localStorage.getItem("username"),testThread));
               $("#m").val('');
               return false;
            });

            socket.on("userCount",function(count){
                $("#userCountId").html("Online Users:"+count);
            });

            socket.on(testThread, function(msg){

            if(!msg.success){
                changeUserName();
                return;
            }

            cnt++;

            var finalMessage="";

            displayNotification(msg);

            if(msg.token==userName)
            {
                msg.token="me";
                finalMessage=msg.token+": "+msg.message;
                var html=$('#messages').html();
                var htmlToAdd="<li style='font-weight:800;color:blue;'>"+finalMessage+"</li>";
                $('#messages').html(html+htmlToAdd);
            }
            else
            {
                finalMessage=msg.token+": "+msg.message;
                $('#messages').append($('<li>').text(finalMessage));
            }

            $("#messages").animate({ scrollTop: (40*cnt)}, 1000);
            });
        });
    </script>
</head>
<body class="container">
    <div class="row">
        <div class="col-md-7">
            <h3>{{message}}</h3>
        </div>
        <div class="col-md-2">
            <a onclick="changeUserName()" href="#"><h5>Change username</h5></a>
        </div>
        <div class="col-md-3">
            <h5 id="userCountId">Users Online:0</h5>
        </div>
    </div>
<hr>

<div class="row">
    <div class="col-md-12">
        <ul id="messages" style="overflow-y:scroll;max-height:450px;font-family:Comic Sans, Comic Sans MS, cursive;"></ul>
    </div>
    <div class="col-md-12">
        <form id="chatForm" action="">
            <div class="row float-right">
                <div class="col-md-12">
                    <input type="text" id="m" autocomplete="off" class="form-control" />
                </div>
            </div>
        </form>
    </div>  
</div>
</body>
</html>